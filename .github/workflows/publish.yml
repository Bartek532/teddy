name: Publish

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-release:
    name: 🟡 Create release
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      - name: 🔨 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⬇️ Get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: ⚡ Create
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `teddy-v${process.env.PACKAGE_VERSION}`,
              name: `Teddy v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build:
    name: 🟢 Build
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
        node-version: [20.x]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      - name: 🎬 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🔨 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: 🎻 Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: 🪘 Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: 🔌 Install frontend dependencies
        run: pnpm install

      - name: 📦 Build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    name: 🔵 Publish release
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build]

    steps:
      - name: 💨 Publish
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
